import { useAppDispatch, useAppSelector } from "../../store/store"
import { IconWrap } from "../../components/Header/IconsWrap/StyledIconsWrap"
import { setClickedTab } from "../../store/navigation"
import { activeBtnColor } from "../../styledConstantsColors"
import { StyledBurgerWrap } from "../../components/Header/StyledHeader"


export const Search = () => {
    const clickedTab = useAppSelector((state) => state.nav.clickedTab)
    const dispatch = useAppDispatch()
    return (<IconWrap onClick={() => {
        if (clickedTab === 'SearchPanel') {
            dispatch(setClickedTab(''))
        } else {
            dispatch(setClickedTab('SearchPanel'))
        }
    }}>{clickedTab !== 'SearchPanel' ? <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" fill="none">
        <path fillRule="evenodd" clipRule="evenodd" d="M13.2408 6.01616C14.8604 5.34529 16.5963 5 18.3494 5C20.1024 5 21.8383 5.34529 23.458 6.01616C25.0776 6.68703 26.5492 7.67034 27.7888 8.90994C29.0284 10.1495 30.0117 11.6212 30.6826 13.2408C31.3535 14.8604 31.6987 16.5963 31.6987 18.3494C31.6987 20.1024 31.3535 21.8383 30.6826 23.458C30.2254 24.5617 29.6231 25.5967 28.8935 26.5364L34.1309 31.7739C34.7818 32.4247 34.7818 33.48 34.1309 34.1309C33.48 34.7818 32.4247 34.7818 31.7739 34.1309L26.5365 28.8935C24.2072 30.7021 21.3297 31.6987 18.3494 31.6987C14.8089 31.6987 11.4134 30.2923 8.90994 27.7888C6.40645 25.2853 5 21.8898 5 18.3494C5 14.8089 6.40645 11.4134 8.90994 8.90994C10.1495 7.67034 11.6212 6.68703 13.2408 6.01616ZM18.3494 8.33333C17.034 8.33333 15.7316 8.59241 14.5164 9.09576C13.3012 9.59911 12.197 10.3369 11.267 11.267C9.38859 13.1453 8.33333 15.693 8.33333 18.3494C8.33333 21.0058 9.38859 23.5534 11.267 25.4318C13.1453 27.3102 15.693 28.3654 18.3494 28.3654C21.0058 28.3654 23.5534 27.3102 25.4318 25.4318C26.3619 24.5017 27.0996 23.3975 27.603 22.1823C28.1063 20.9671 28.3654 19.6647 28.3654 18.3494C28.3654 17.034 28.1063 15.7316 27.603 14.5164C27.0996 13.3012 26.3619 12.197 25.4318 11.267C24.5017 10.3369 23.3975 9.59911 22.1823 9.09576C20.9671 8.59241 19.6647 8.33333 18.3494 8.33333Z" />
    </svg> : <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
        <path fillRule="evenodd" clipRule="evenodd" d="M9.30006 9.29989C9.65161 8.94877 10.1282 8.75154 10.6251 8.75154C11.1219 8.75154 11.5985 8.94877 11.9501 9.29989L20.0001 17.3499L28.0501 9.29989C28.2218 9.11567 28.4288 8.96792 28.6588 8.86544C28.8888 8.76297 29.1371 8.70787 29.3888 8.70342C29.6406 8.69897 29.8906 8.74529 30.1241 8.83959C30.3576 8.93389 30.5696 9.07424 30.7476 9.25229C30.9258 9.43034 31.0661 9.64244 31.1603 9.87589C31.2546 10.1094 31.3011 10.3594 31.2966 10.6112C31.2921 10.863 31.2371 11.1112 31.1346 11.3412C31.0321 11.5712 30.8843 11.7782 30.7001 11.9499L22.6501 19.9999L30.7001 28.0499C30.8843 28.2216 31.0321 28.4286 31.1346 28.6586C31.2371 28.8886 31.2921 29.1369 31.2966 29.3886C31.3011 29.6404 31.2546 29.8904 31.1603 30.1239C31.0661 30.3574 30.9258 30.5694 30.7476 30.7474C30.5696 30.9256 30.3576 31.0659 30.1241 31.1601C29.8906 31.2544 29.6406 31.3009 29.3888 31.2964C29.1371 31.2919 28.8888 31.2369 28.6588 31.1344C28.4288 31.0319 28.2218 30.8841 28.0501 30.6999L20.0001 22.6499L11.9501 30.6999C11.5946 31.0311 11.1245 31.2114 10.6387 31.2029C10.153 31.1941 9.68953 30.9974 9.34598 30.6539C9.00246 30.3104 8.80568 29.8469 8.79711 29.3611C8.78853 28.8754 8.96886 28.4054 9.30006 28.0499L17.3501 19.9999L9.30006 11.9499C8.94893 11.5983 8.75171 11.1218 8.75171 10.6249C8.75171 10.128 8.94893 9.65147 9.30006 9.29989Z" fill={activeBtnColor.green} />
    </svg>}</IconWrap>)
}

export const Cart = () => {
    return (<IconWrap><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" fill="none">
        <path fillRule="evenodd" clipRule="evenodd" d="M13.834 31.333C15.2147 31.333 16.334 32.4523 16.334 33.833C16.334 35.2137 15.2147 36.333 13.834 36.333C12.4533 36.333 11.334 35.2137 11.334 33.833C11.334 32.4523 12.4533 31.333 13.834 31.333ZM28.834 31.333C30.2147 31.333 31.334 32.4523 31.334 33.833C31.334 35.2137 30.2147 36.333 28.834 36.333C27.4533 36.333 26.334 35.2137 26.334 33.833C26.334 32.4523 27.4533 31.333 28.834 31.333ZM4.66667 3H8C8.75934 3 9.41385 3.5114 9.60843 4.22957L9.64729 4.41324L10.4555 9.66667H34.6667C35.6663 9.66667 36.4249 10.5345 36.3252 11.5006L36.2936 11.6949L33.5404 24.0847C33.0541 26.2729 31.1765 27.8572 28.9632 27.9908L28.6594 28H14.1931C11.8239 28 9.79495 26.3406 9.30442 24.0498L9.2512 23.7603L6.57014 6.33333H4.66667C3.74619 6.33333 3 5.58714 3 4.66667C3 3.81194 3.6434 3.10749 4.4723 3.01121L4.66667 3H8H4.66667ZM32.5894 13H10.9688L12.5462 23.2534C12.6617 24.0039 13.2666 24.5731 14.006 24.6562L14.1935 24.6667H28.6599C29.3759 24.6667 30.0039 24.2108 30.2341 23.5474L30.2868 23.3616L32.5894 13Z" />
    </svg></IconWrap>)
}

export const User = () => {
    const clickedTab = useAppSelector((state) => state.nav.clickedTab)
    const dispatch = useAppDispatch()
    return (<IconWrap onClick={() => {
        if (clickedTab === 'UserPanel') {
            dispatch(setClickedTab(''))
        } else {
            dispatch(setClickedTab('UserPanel'))
        }
    }} id='userIcon'><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" fill="none">
            <path d="M7 30.6667H5.25H7ZM13.6667 24V22.25V24ZM27 24V22.25V24ZM8.75 30.6667C8.75 29.3627 9.268 28.1121 10.1901 27.1901L7.71518 24.7152C6.13675 26.2936 5.25 28.4344 5.25 30.6667H8.75ZM10.1901 27.1901C11.1121 26.268 12.3627 25.75 13.6667 25.75V22.25C11.4344 22.25 9.29362 23.1368 7.71518 24.7152L10.1901 27.1901ZM13.6667 25.75H27V22.25H13.6667V25.75ZM27 25.75C28.304 25.75 29.5546 26.268 30.4766 27.1901L32.9515 24.7152C31.373 23.1368 29.2322 22.25 27 22.25V25.75ZM30.4766 27.1901C31.3987 28.1121 31.9167 29.3627 31.9167 30.6667H35.4167C35.4167 28.4344 34.5299 26.2936 32.9515 24.7152L30.4766 27.1901ZM31.9167 30.6667C31.9167 31.0866 31.7499 31.4893 31.4529 31.7863L33.9278 34.2611C34.8811 33.3078 35.4167 32.0149 35.4167 30.6667H31.9167ZM31.4529 31.7863C31.156 32.0832 30.7533 32.25 30.3333 32.25V35.75C31.6815 35.75 32.9745 35.2144 33.9278 34.2611L31.4529 31.7863ZM30.3333 32.25H10.3333V35.75H30.3333V32.25ZM10.3333 32.25C9.91341 32.25 9.51068 32.0832 9.21375 31.7863L6.73887 34.2611C7.69218 35.2144 8.98515 35.75 10.3333 35.75V32.25ZM9.21375 31.7863C8.91681 31.4893 8.75 31.0866 8.75 30.6667H5.25C5.25 32.0149 5.78556 33.3078 6.73887 34.2611L9.21375 31.7863ZM23.584 12C23.584 13.7949 22.1289 15.25 20.334 15.25V18.75C24.0619 18.75 27.084 15.7279 27.084 12H23.584ZM20.334 15.25C18.5391 15.25 17.084 13.7949 17.084 12H13.584C13.584 15.7279 16.6061 18.75 20.334 18.75V15.25ZM17.084 12C17.084 10.2051 18.5391 8.75 20.334 8.75V5.25C16.6061 5.25 13.584 8.27208 13.584 12H17.084ZM20.334 8.75C22.1289 8.75 23.584 10.2051 23.584 12H27.084C27.084 8.27208 24.0619 5.25 20.334 5.25V8.75Z" />
        </svg></IconWrap>)
}

export const Burger = () => {
    const clickedTab = useAppSelector((state) => state.nav.clickedTab)
    const dispatch = useAppDispatch()
    return (<StyledBurgerWrap onClick={() => {
        if (clickedTab === 'MenuPanel') {
            dispatch(setClickedTab(''))
        } else {
            dispatch(setClickedTab('MenuPanel'))
        }
    }}>{clickedTab === 'MenuPanel' ? <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" fill="none">
        <path fillRule="evenodd" clipRule="evenodd" d="M9.29982 9.29989C9.65137 8.94877 10.1279 8.75154 10.6248 8.75154C11.1217 8.75154 11.5982 8.94877 11.9498 9.29989L19.9998 17.3499L28.0498 9.29989C28.2216 9.11567 28.4286 8.96792 28.6586 8.86544C28.8886 8.76297 29.1368 8.70787 29.3886 8.70342C29.6403 8.69897 29.8903 8.74529 30.1238 8.83959C30.3573 8.93389 30.5693 9.07424 30.7473 9.25229C30.9256 9.43034 31.0658 9.64244 31.1601 9.87589C31.2543 10.1094 31.3008 10.3594 31.2963 10.6112C31.2918 10.863 31.2368 11.1112 31.1343 11.3412C31.0318 11.5712 30.8841 11.7782 30.6998 11.9499L22.6498 19.9999L30.6998 28.0499C30.8841 28.2216 31.0318 28.4286 31.1343 28.6586C31.2368 28.8886 31.2918 29.1369 31.2963 29.3886C31.3008 29.6404 31.2543 29.8904 31.1601 30.1239C31.0658 30.3574 30.9256 30.5694 30.7473 30.7474C30.5693 30.9256 30.3573 31.0659 30.1238 31.1601C29.8903 31.2544 29.6403 31.3009 29.3886 31.2964C29.1368 31.2919 28.8886 31.2369 28.6586 31.1344C28.4286 31.0319 28.2216 30.8841 28.0498 30.6999L19.9998 22.6499L11.9498 30.6999C11.5944 31.0311 11.1242 31.2114 10.6385 31.2029C10.1527 31.1941 9.68929 30.9974 9.34574 30.6539C9.00221 30.3104 8.80544 29.8469 8.79687 29.3611C8.78829 28.8754 8.96862 28.4054 9.29982 28.0499L17.3498 19.9999L9.29982 11.9499C8.94869 11.5983 8.75146 11.1218 8.75146 10.6249C8.75146 10.128 8.94869 9.65147 9.29982 9.29989Z" />
    </svg> : <svg viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M5.33333 10.6667C4.59695 10.6667 4 10.0697 4 9.33333C4 8.59695 4.59695 8 5.33333 8H26.6667C27.403 8 28 8.59695 28 9.33333C28 10.0697 27.403 10.6667 26.6667 10.6667H5.33333ZM4 16C4 16.7364 4.59695 17.3333 5.33333 17.3333H26.6667C27.403 17.3333 28 16.7364 28 16C28 15.2636 27.403 14.6667 26.6667 14.6667H5.33333C4.59695 14.6667 4 15.2636 4 16ZM4 22.6667C4 23.403 4.59695 24 5.33333 24H26.6667C27.403 24 28 23.403 28 22.6667C28 21.9303 27.403 21.3333 26.6667 21.3333H5.33333C4.59695 21.3333 4 21.9303 4 22.6667Z" fill="#65DC6A" />
    </svg>
        }</StyledBurgerWrap>)
}